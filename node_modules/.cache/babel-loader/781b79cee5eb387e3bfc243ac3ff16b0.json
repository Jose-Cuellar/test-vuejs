{"ast":null,"code":"import axios from 'axios';\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert2';\nwindow.Swal = swal;\nexport default {\n  name: 'pruebasVue',\n\n  data() {\n    return {\n      notas: [],\n      notas_download: [],\n      show_table: false,\n      show_btn: false,\n      hide_btn_get: true\n    };\n  },\n\n  methods: {\n    recuperarPost() {\n      axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(respuesta => {\n        if (respuesta.data.cod == 0) {\n          this.notas = respuesta.data;\n          this.show_table = true;\n          this.show_btn = true;\n          this.hide_btn_get = false;\n          console.log('this.notas: ', JSON.stringify(this.notas));\n          swal.fire({\n            icon: \"success\",\n            title: \"Muy bien!\",\n            text: \"Datos consumidos correctamente\",\n            confirmButtonColor: \"green\"\n          });\n        } else {\n          swal.fire({\n            icon: \"error\",\n            title: \"Oops\",\n            text: \"Ocurrió un error trayendo la info\",\n            confirmButtonColor: \"red\"\n          });\n        }\n      });\n    },\n\n    downloadExcel() {\n      this.notas.forEach(nota => {\n        this.notas_download.push({\n          Id: nota.id,\n          Titulo: nota.title\n        });\n      });\n      let data_export = XLSX.utils.json_to_sheet(this.notas_download);\n      const workbook = XLSX.utils.book_new();\n      const filename = 'post_recuperados';\n      XLSX.utils.book_append_sheet(workbook, data_export, filename);\n      XLSX.writeFile(workbook, `${filename}.xlsx`);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoCA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACAC,MAAM,CAACC,IAAP,GAAcF,IAAd;AAEA,eAAe;EACbG,IAAI,EAAE,YADO;;EAEbC,IAAI,GAAE;IACJ,OAAM;MACJC,KAAK,EAAE,EADH;MAEJC,cAAc,EAAE,EAFZ;MAGJC,UAAU,EAAE,KAHR;MAIJC,QAAQ,EAAE,KAJN;MAKJC,YAAY,EAAE;IALV,CAAN;EAOD,CAVY;;EAWbC,OAAO,EAAE;IACPC,aAAa,GAAG;MACdb,KAAK,CAACc,GAAN,CAAU,4CAAV,EAAwDC,IAAxD,CAA8DC,SAAD,IAAe;QAC1E,IAAIA,SAAS,CAACV,IAAV,CAAeW,GAAf,IAAsB,CAA1B,EAA6B;UAC3B,KAAKV,KAAL,GAAaS,SAAS,CAACV,IAAvB;UACA,KAAKG,UAAL,GAAkB,IAAlB;UACA,KAAKC,QAAL,GAAgB,IAAhB;UACA,KAAKC,YAAL,GAAoB,KAApB;UACAO,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,IAAI,CAACC,SAAL,CAAe,KAAKd,KAApB,CAA5B;UACAL,IAAI,CAACoB,IAAL,CAAU;YACRC,IAAI,EAAE,SADE;YAERC,KAAK,EAAE,WAFC;YAGRC,IAAI,EAAE,gCAHE;YAIRC,kBAAkB,EAAE;UAJZ,CAAV;QAMF,CAZA,MAYO;UACLxB,IAAI,CAACoB,IAAL,CAAU;YACRC,IAAI,EAAE,OADE;YAERC,KAAK,EAAE,MAFC;YAGRC,IAAI,EAAE,mCAHE;YAIRC,kBAAkB,EAAE;UAJZ,CAAV;QAMF;MACD,CArBD;IAsBD,CAxBM;;IAyBPC,aAAa,GAAE;MACb,KAAKpB,KAAL,CAAWqB,OAAX,CAAoBC,IAAD,IAAU;QAC3B,KAAKrB,cAAL,CAAoBsB,IAApB,CAAyB;UACvBC,EAAE,EAACF,IAAI,CAACG,EADe;UAEvBC,MAAM,EAACJ,IAAI,CAACL;QAFW,CAAzB;MAID,CALD;MAOA,IAAIU,WAAU,GAAIjC,IAAI,CAACkC,KAAL,CAAWC,aAAX,CAAyB,KAAK5B,cAA9B,CAAlB;MACA,MAAM6B,QAAO,GAAIpC,IAAI,CAACkC,KAAL,CAAWG,QAAX,EAAjB;MACA,MAAMC,QAAO,GAAI,kBAAjB;MACAtC,IAAI,CAACkC,KAAL,CAAWK,iBAAX,CAA6BH,QAA7B,EAAuCH,WAAvC,EAAoDK,QAApD;MACAtC,IAAI,CAACwC,SAAL,CAAeJ,QAAf,EAA0B,GAAEE,QAAS,OAArC;IACF;;EAtCO;AAXI,CAAf","names":["axios","XLSX","swal","window","Swal","name","data","notas","notas_download","show_table","show_btn","hide_btn_get","methods","recuperarPost","get","then","respuesta","cod","console","log","JSON","stringify","fire","icon","title","text","confirmButtonColor","downloadExcel","forEach","nota","push","Id","id","Titulo","data_export","utils","json_to_sheet","workbook","book_new","filename","book_append_sheet","writeFile"],"sourceRoot":"","sources":["/home/tars/Documentos/proyectos/test_vue/src/components/pruebas.vue"],"sourcesContent":["<template>\n  <div id=\"aplicacion\">\n    <div v-if=\"hide_btn_get\">\n      <button class=\"btn_get\" v-on:click=\"recuperarPost()\">\n        Click para mostrar los datos\n      </button>\n    </div>\n    <br><br>\n    <div v-if=\"show_table\">\n      <hr>\n      <h1>Datos obtenidos con v-on:click</h1>\n        <table id=\"pruebasVue\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>TITLE</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"nota in notas\" v-bind:key=\"nota.id\">\n              <td>{{ nota.id }}</td>\n              <td>{{ nota.title }}</td>\n            </tr>\n          </tbody>\n        </table>\n        <div v-if=\"show_btn\">\n          <button class=\"btn_download\" @click=\"downloadExcel()\">\n            Descargar excel\n          </button>\n        </div>\n      <hr>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert2';\nwindow.Swal = swal;\n\nexport default {\n  name: 'pruebasVue',\n  data(){\n    return{\n      notas: [],\n      notas_download: [],\n      show_table: false,\n      show_btn: false,\n      hide_btn_get: true,\n    }\n  },\n  methods: {\n    recuperarPost() {\n      axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((respuesta) => {\n        if (respuesta.data.cod == 0) {\n          this.notas = respuesta.data;\n          this.show_table = true;\n          this.show_btn = true;\n          this.hide_btn_get = false;\n          console.log('this.notas: ', JSON.stringify(this.notas));\n          swal.fire({\n            icon: \"success\",\n            title: \"Muy bien!\",\n            text: \"Datos consumidos correctamente\",\n            confirmButtonColor: \"green\",\n          });\n        } else {\n          swal.fire({\n            icon: \"error\",\n            title: \"Oops\",\n            text: \"Ocurrió un error trayendo la info\",\n            confirmButtonColor: \"red\",\n          });\n        }\n      })\n    },\n    downloadExcel(){\n      this.notas.forEach((nota) => {\n        this.notas_download.push({\n          Id:nota.id,\n          Titulo:nota.title\n        })\n      });\n\n      let data_export = XLSX.utils.json_to_sheet(this.notas_download);\n      const workbook = XLSX.utils.book_new();\n      const filename = 'post_recuperados';\n      XLSX.utils.book_append_sheet(workbook, data_export, filename);\n      XLSX.writeFile(workbook, `${filename}.xlsx`);\n    }\n  },\n}\n</script>\n\n<style scoped>\n  #aplicacion{\n    padding: 20px 10px 50px 10px;\n  }\n  #pruebasVue{\n    margin: auto;\n  }\n  th{\n    border: 2px solid #008CBA !important;\n  }\n  th, td{\n    text-align:left;\n    border: 1px solid gray;\n    padding: 10px 10px 10px 10px;\n    margin: auto;\n  }\n  .btn_get{\n    padding: 10px 15px 10px 15px;\n    border: 2px solid;\n    cursor: pointer;\n    background-color: white;\n    color: #008CBA;\n    border-radius: 30px;\n    font-weight: bold;\n  }\n  .btn_get:hover{\n    color: green;\n  }\n  .btn_download{\n    padding: 10px 15px 10px 15px;\n    border: 2px solid;\n    cursor: pointer;\n    background-color: white;\n    color: #008CBA;\n    border-radius: 30px;\n    font-weight: bold;\n    margin-top: 20px;\n  }\n  .btn_download:hover{\n    color: green;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}
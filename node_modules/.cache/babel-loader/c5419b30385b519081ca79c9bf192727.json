{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7a094ec5\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"content\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  id: \"title\"\n}, \"Datos consumidos por axios\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = {\n  id: \"data\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"ID USER\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"TITLE\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"COMPLETED\")])], -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_paginate = _resolveComponent(\"paginate\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createVNode(_component_paginate, {\n    ref: \"paginator\",\n    name: \"datos\",\n    list: $data.datos,\n    per: 10\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.paginated('datos'), (dato, i) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: 'd' + `item-${i}`\n      }, [_createCommentVNode(\" <tr v-for=\\\"dato in datos\\\" v-bind:key=\\\"dato.id\\\"> \"), _createElementVNode(\"td\", null, _toDisplayString(dato.userId), 1\n      /* TEXT */\n      ), _createElementVNode(\"td\", null, _toDisplayString(dato.id), 1\n      /* TEXT */\n      ), _createElementVNode(\"td\", null, _toDisplayString(dato.title), 1\n      /* TEXT */\n      ), _createElementVNode(\"td\", null, _toDisplayString(dato.completed), 1\n      /* TEXT */\n      )]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"list\"]), _createElementVNode(\"button\", {\n    class: \"btn_excel\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.downloadExcel())\n  }, \" Descargar excel \"), _hoisted_6]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;gEACPC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gEACAA,oBAA8C,IAA9C,EAA8C;EAA1CC,EAAE,EAAC;AAAuC,CAA9C,EAAe,4BAAf,EAAyC;AAAA;AAAzC;;;EAESA,EAAE,EAAC;;;gEACRD,oBAOQ,OAPR,EAOQ,IAPR,EAOQ,cANJA,oBAKK,IALL,EAKK,IALL,EAKK,cAJDA,oBAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CAIC,eAHDA,oBAAW,IAAX,EAAW,IAAX,EAAI,IAAJ,CAGC,eAFDA,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,CAEC,eADDA,oBAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,CACC,CALL,CAMI,CAPR;;AAAA;;gEAsBJA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;;uBA3BJE,oBA4BM,KA5BN,cA4BM,CA3BFC,UA2BE,EA1BFC,UA0BE,EAzBFC,aAoBWC,mBApBX,EAoBW;IApBDC,GAAG,EAAC,WAoBH;IApBeC,IAAI,EAAC,OAoBpB;IApB6BC,IAAI,EAAEC,WAoBnC;IApB2CC,GAAG,EAAE;EAoBhD,CApBX;sBACE,MAkBQ,CAlBRX,oBAkBQ,OAlBR,cAkBQ,CAjBNY,UAiBM,EATNZ,oBAQQ,OARR,EAQQ,IARR,EAQQ,oBAPJE,oBAMKW,SANL,EAMK,IANL,EAMKC,YANmBC,eAAS,OAAT,CAMnB,EAN4B,CAArBC,IAAqB,EAAfC,CAAe,KAAd;2BAAnBf,oBAMK,IANL,EAMK;QANwCgB,GAAG,gBAAgBD,CAAC;MAM5D,CANL,GACAE,8EACInB,oBAA0B,IAA1B,EAA0B,IAA1B,EAA0BoB,iBAAnBJ,IAAI,CAACK,MAAc,CAA1B,EAAkB;MAAA;MAAlB,GACArB,oBAAsB,IAAtB,EAAsB,IAAtB,EAAsBoB,iBAAfJ,IAAI,CAACf,EAAU,CAAtB,EAAc;MAAA;MAAd,GACAD,oBAAyB,IAAzB,EAAyB,IAAzB,EAAyBoB,iBAAlBJ,IAAI,CAACM,KAAa,CAAzB,EAAiB;MAAA;MAAjB,GACAtB,oBAA6B,IAA7B,EAA6B,IAA7B,EAA6BoB,iBAAtBJ,IAAI,CAACO,SAAiB,CAA7B,EAAqB;MAAA;MAArB,EALJ;KAMK,CANL;;IAAA,CAOI,EARR,CASM,CAlBR,CAkBQ;;;;GAnBV;;EAAA,WAyBE,EAJFvB,oBAES,QAFT,EAES;IAFDD,KAAK,EAAC,WAEL;IAFkByB,OAAK,sCAAEC,wBAAF;EAEvB,CAFT,EAAmD,mBAAnD,CAIE,EADFC,UACE,CA5BN","names":["class","_createElementVNode","id","_createElementBlock","_hoisted_2","_hoisted_3","_createVNode","_component_paginate","ref","name","list","$data","per","_hoisted_5","_Fragment","_renderList","_ctx","dato","i","key","_createCommentVNode","_toDisplayString","userId","title","completed","onClick","$options","_hoisted_6"],"sourceRoot":"","sources":["/home/tars/Documentos/proyectos/test_vue/src/components/pruebaAxios.vue"],"sourcesContent":["<template>\n    <div class=\"content\">\n        <hr>\n        <h1 id=\"title\">Datos consumidos por axios</h1>\n        <paginate ref=\"paginator\" name=\"datos\" :list=\"datos\" :per=\"10\">\n          <table id=\"data\">\n            <thead>\n                <tr>\n                    <th>ID USER</th>\n                    <th>ID</th>\n                    <th>TITLE</th>\n                    <th>COMPLETED</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(dato, i) in paginated('datos')\" :key=\"'d' + `item-${i}`\">\n                <!-- <tr v-for=\"dato in datos\" v-bind:key=\"dato.id\"> -->\n                    <td>{{ dato.userId }}</td>\n                    <td>{{ dato.id }}</td>\n                    <td>{{ dato.title }}</td>\n                    <td>{{ dato.completed }}</td>\n                </tr>\n            </tbody>\n          </table>\n        </paginate>\n        <button class=\"btn_excel\" @click=\"downloadExcel()\">\n            Descargar excel\n        </button>\n        <hr>\n    </div>\n</template>\n  \n<script>\nimport axios from \"axios\";\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert2';\n\nexport default {\n  name: 'pruebaAxios',\n  data(){\n      return{\n          datos: [],\n          paginate: ['datos'],\n          dataToExport: [],\n      }\n  },\n  methods:{\n      get_data(){\n          var app = this;\n          axios.get(\"https://jsonplaceholder.typicode.com/todos/\").then((res) => {\n              app.datos = res.data;\n              // console.log('app.datos: ', app.datos);\n          });\n      },\n      downloadExcel() {\n        swal.fire({\n        icon: \"question\",\n        title: \"Descargar reporte\",\n        text: \"¿Deseas descargar el reporte?\",\n        confirmButtonText: \"Sí, Descargar\",\n        confirmButtonColor: \"green\",\n        showCancelButton: true,\n        cancelButtonText: \"No, Cancelar\",\n        cancelButtonColor: \"#d33\",\n        showClass: {\n          popup: 'animate__animated animate__fadeInDown'\n        },\n        }).then( (result) => {\n          if(result.isConfirmed){\n            this.datos.forEach((dato) => {\n                this.dataToExport.push({\n                    Id_Usuario:dato.userId,\n                    Id:dato.id,\n                    Titulo:dato.title,\n                    Completado:dato.completed\n                });\n            });\n            let data = XLSX.utils.json_to_sheet(this.dataToExport);\n            const workbook = XLSX.utils.book_new();\n            const filename = 'axios_get';\n            XLSX.utils.book_append_sheet(workbook, data, filename);\n            XLSX.writeFile(workbook, `${filename}.xlsx`);\n          }\n        });\n      }\n  },\n  mounted(){\n      this.get_data();\n  },\n  created() {\n      \n  }\n};\n</script>\n  \n<style scoped>\n  .content{\n    padding: 20px 10px 50px 10px;\n  }\n  #data{\n    margin: auto;\n  }\n  th{\n    border: 2px solid #008CBA !important;\n  }\n  th, td{\n    text-align:left;\n    border: 1px solid gray;\n    padding: 10px 10px 10px 10px;\n    margin: auto;\n  }\n  #title{\n    font-size:30px;\n    color:darkblue;\n  }\n  .btn_excel{\n    padding: 10px 15px 10px 15px;\n    border: 2px solid;\n    cursor: pointer;\n    background-color: white;\n    color: #008CBA;\n    border-radius: 30px;\n    font-weight: bold;\n    margin-top: 20px;\n  }\n  .btn_excel:hover{\n    color: green;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}
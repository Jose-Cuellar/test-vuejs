{"ast":null,"code":"import axios from \"axios\";\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert2';\nexport default {\n  name: 'pruebaAxios',\n\n  data() {\n    return {\n      datos: [],\n      dataToExport: [],\n      currentPage: 1,\n      itemsPerPage: 10\n    };\n  },\n\n  methods: {\n    get_data() {\n      var app = this;\n      axios.get(\"https://jsonplaceholder.typicode.com/todos/\").then(res => {\n        app.datos = res.data; // console.log('app.datos: ', app.datos);\n      });\n    },\n\n    downloadExcel() {\n      swal.fire({\n        icon: \"question\",\n        title: \"Descargar reporte\",\n        text: \"¿Deseas descargar el reporte?\",\n        confirmButtonText: \"Sí, Descargar\",\n        confirmButtonColor: \"green\",\n        showCancelButton: true,\n        cancelButtonText: \"No, Cancelar\",\n        cancelButtonColor: \"#d33\",\n        showClass: {\n          popup: 'animate__animated animate__fadeInDown'\n        }\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.datos.forEach(dato => {\n            this.dataToExport.push({\n              Id_Usuario: dato.userId,\n              Id: dato.id,\n              Titulo: dato.title,\n              Completado: dato.completed\n            });\n          });\n          let data = XLSX.utils.json_to_sheet(this.dataToExport);\n          const workbook = XLSX.utils.book_new();\n          const filename = 'axios_get';\n          XLSX.utils.book_append_sheet(workbook, data, filename);\n          XLSX.writeFile(workbook, `${filename}.xlsx`);\n        }\n      });\n    },\n\n    back() {\n      window.history.back();\n    },\n\n    changePage(pageNumber) {\n      this.currentPage = pageNumber;\n    },\n\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.datos.length / this.itemsPerPage);\n    },\n\n    paginatedData() {\n      const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n      return this.datos.slice(startIndex, startIndex + this.itemsPerPage);\n    },\n\n    pages() {\n      const pagesArray = [];\n\n      for (let i = 1; i <= this.totalPages; i++) {\n        pagesArray.push(i);\n      }\n\n      return pagesArray;\n    }\n\n  },\n\n  mounted() {\n    this.get_data();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","XLSX","swal","name","data","datos","dataToExport","currentPage","itemsPerPage","methods","get_data","app","get","then","res","downloadExcel","fire","icon","title","text","confirmButtonText","confirmButtonColor","showCancelButton","cancelButtonText","cancelButtonColor","showClass","popup","result","isConfirmed","forEach","dato","push","Id_Usuario","userId","Id","id","Titulo","Completado","completed","utils","json_to_sheet","workbook","book_new","filename","book_append_sheet","writeFile","back","window","history","changePage","pageNumber","prevPage","nextPage","totalPages","computed","Math","ceil","length","paginatedData","startIndex","slice","pages","pagesArray","i","mounted"],"sourceRoot":"","sources":["/home/tars/Documentos/proyectos/test_vue/src/views/datosAxios/pruebaAxios.vue"],"sourcesContent":["<template>\n    <div class=\"content\">\n        <hr>\n        <h1 id=\"title\">Datos consumidos por axios</h1>\n        <!-- <paginate ref=\"paginator\" name=\"datos\" :list=\"datos\" :per=\"10\"> -->\n          <table class=\"table table-striped\">\n            <thead class=\"thead-light\">\n                <tr>\n                    <th scope=\"col\">ID</th>\n                    <th scope=\"col\">ID USER</th>\n                    <th scope=\"col\">TITLE</th>\n                    <th scope=\"col\">COMPLETED</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"dato in datos.slice((currentPage - 1) * 10, currentPage * 10)\" :key=\"dato.id\">\n                    <td>{{ dato.id }}</td>\n                    <td>{{ dato.userId }}</td>\n                    <td>{{ dato.title }}</td>\n                    <td>{{ dato.completed }}</td>\n                </tr>\n            </tbody>\n          </table>\n        <!-- </paginate> -->\n\n        <nav aria-label=\"Page navigation example\">\n          <ul class=\"pagination\">\n            <li class=\"page-item\" :class=\"{disabled: currentPage === 1}\">\n              <a class=\"page-link\" href=\"#\" @click.prevent=\"prevPage()\">\n                Previous\n              </a>\n            </li>\n            <li class=\"page-item\" v-for=\"page in pages\" :key=\"page\" :class=\"{active: currentPage === page}\">\n              <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(page)\">\n                {{ page }}\n              </a>\n            </li>\n            <li class=\"page-item\" :class=\"{disabled: currentPage === totalPages}\">\n              <a class=\"page-link\" href=\"#\" @click.prevent=\"nextPage()\">\n                Next\n              </a>\n            </li>\n          </ul>\n        </nav>\n\n        <div class=\"botones\">\n          <button class=\"btn_back\" @click=\"back()\">\n            Regresar\n          </button>\n          <button class=\"btn_excel\" @click=\"downloadExcel()\">\n            Descargar excel\n          </button>\n        </div>\n        <hr>\n    </div>\n</template>\n  \n<script>\nimport axios from \"axios\";\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert2';\n\nexport default {\n  name: 'pruebaAxios',\n  data(){\n    return{\n      datos: [],\n      dataToExport: [],\n      currentPage: 1,\n      itemsPerPage: 10,\n    }\n  },\n  methods:{\n    get_data(){\n      var app = this;\n      axios.get(\"https://jsonplaceholder.typicode.com/todos/\").then((res) => {\n        app.datos = res.data;\n        // console.log('app.datos: ', app.datos);\n      });\n    },\n    downloadExcel() {\n      swal.fire({\n        icon: \"question\",\n        title: \"Descargar reporte\",\n        text: \"¿Deseas descargar el reporte?\",\n        confirmButtonText: \"Sí, Descargar\",\n        confirmButtonColor: \"green\",\n        showCancelButton: true,\n        cancelButtonText: \"No, Cancelar\",\n        cancelButtonColor: \"#d33\",\n        showClass: {\n          popup: 'animate__animated animate__fadeInDown'\n        },\n      }).then( (result) => {\n        if(result.isConfirmed){\n          this.datos.forEach((dato) => {\n            this.dataToExport.push({\n              Id_Usuario:dato.userId,\n              Id:dato.id,\n              Titulo:dato.title,\n              Completado:dato.completed\n            });\n          });\n          let data = XLSX.utils.json_to_sheet(this.dataToExport);\n          const workbook = XLSX.utils.book_new();\n          const filename = 'axios_get';\n          XLSX.utils.book_append_sheet(workbook, data, filename);\n          XLSX.writeFile(workbook, `${filename}.xlsx`);\n        }\n      });\n    },\n    back(){\n      window.history.back();\n    },\n    changePage(pageNumber) {\n      this.currentPage = pageNumber;\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.datos.length / this.itemsPerPage);\n    },\n    paginatedData() {\n      const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n      return this.datos.slice(startIndex, startIndex + this.itemsPerPage);\n    },\n    pages() {\n      const pagesArray = [];\n      for (let i = 1; i <= this.totalPages; i++) {\n        pagesArray.push(i);\n      }\n      return pagesArray;\n    },\n  },\n  mounted(){\n    this.get_data();\n  },\n};\n</script>\n  \n<style scoped>\n  .content{\n    max-width: 80%;\n    padding: 20px 10px 50px 10px;\n    margin: auto;\n  }\n  /* th{\n    border: 2px solid #008CBA !important;\n  }\n  th, td{\n    text-align:left;\n    border: 1px solid gray;\n    padding: 10px 10px 10px 10px;\n    margin: auto;\n  } */\n  #title{\n    font-size:30px;\n    color:darkblue;\n  }\n  .botones{\n    width: 100%;\n    margin: auto;\n  }\n  .btn_excel{\n    padding: 5px 15px 5px 15px;\n    border: 2px solid;\n    cursor: pointer;\n    background-color: white;\n    color: #008CBA;\n    border-radius: 30px;\n    font-weight: bold;\n    margin: 20px 20px 5px 0px;\n  }\n  .btn_excel:hover{\n    color: green;\n  }\n  .btn_back{\n    padding: 5px 15px 5px 15px;\n    border: 2px solid;\n    cursor: pointer;\n    background-color: white;\n    color: #008CBA;\n    border-radius: 30px;\n    font-weight: bold;\n    margin: 20px 20px 5px 0px;\n  }\n  .btn_back:hover{\n    color: red;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}
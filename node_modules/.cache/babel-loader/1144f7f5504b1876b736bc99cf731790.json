{"ast":null,"code":"import axios from 'axios';\nimport * as XLSX from 'xlsx';\nexport default {\n  name: 'pruebasVue',\n\n  data() {\n    return {\n      notas: [],\n      arrNotas: []\n    };\n  },\n\n  methods: {\n    recuperarPost() {\n      axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(respuesta => {\n        if (respuesta.data) {\n          // console.log('respuesta: ', JSON.stringify(respuesta.data));\n          this.notas = respuesta.data; //   this.$swal({\n          //     title: \"Muy bien\",\n          //   });\n          // } else {\n          //   this.$swal({\n          //     title: \"Oops... Ocurrió un error\",\n          //   });\n        }\n      });\n    },\n\n    downloadExcel() {\n      this.notas.forEach(nota => {\n        this.arrNotas.push({\n          Id: nota.id,\n          Titulo: nota.title\n        });\n      });\n      let data_export = XLSX.utils.json_to_sheet(this.arrNotas);\n      const workbook = XLSX.utils.book_new();\n      const filename = 'post_recuperados';\n      XLSX.utils.book_append_sheet(workbook, data_export, filename);\n      XLSX.writeFile(workbook, `${filename}.xlsx`);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAiCA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AAEA,eAAe;EACbC,IAAI,EAAE,YADO;;EAEbC,IAAI,GAAE;IACJ,OAAM;MACJC,KAAK,EAAC,EADF;MAEJC,QAAQ,EAAE;IAFN,CAAN;EAID,CAPY;;EAQbC,OAAO,EAAE;IACPC,aAAa,GAAG;MACdP,KAAK,CAACQ,GAAN,CAAU,4CAAV,EAAwDC,IAAxD,CAA8DC,SAAD,IAAe;QAC1E,IAAIA,SAAS,CAACP,IAAd,EAAoB;UAClB;UACA,KAAKC,KAAL,GAAaM,SAAS,CAACP,IAAvB,CAFkB,CAIpB;UACA;UACA;UACA;UACA;UACA;UACA;QACA;MACD,CAbD;IAcD,CAhBM;;IAiBPQ,aAAa,GAAE;MACb,KAAKP,KAAL,CAAWQ,OAAX,CAAoBC,IAAD,IAAU;QAC3B,KAAKR,QAAL,CAAcS,IAAd,CAAmB;UACjBC,EAAE,EAACF,IAAI,CAACG,EADS;UAEjBC,MAAM,EAACJ,IAAI,CAACK;QAFK,CAAnB;MAID,CALD;MAOA,IAAIC,WAAU,GAAIlB,IAAI,CAACmB,KAAL,CAAWC,aAAX,CAAyB,KAAKhB,QAA9B,CAAlB;MACA,MAAMiB,QAAO,GAAIrB,IAAI,CAACmB,KAAL,CAAWG,QAAX,EAAjB;MACA,MAAMC,QAAO,GAAI,kBAAjB;MACAvB,IAAI,CAACmB,KAAL,CAAWK,iBAAX,CAA6BH,QAA7B,EAAuCH,WAAvC,EAAoDK,QAApD;MACAvB,IAAI,CAACyB,SAAL,CAAeJ,QAAf,EAA0B,GAAEE,QAAS,OAArC;IACF;;EA9BO;AARI,CAAf","names":["axios","XLSX","name","data","notas","arrNotas","methods","recuperarPost","get","then","respuesta","downloadExcel","forEach","nota","push","Id","id","Titulo","title","data_export","utils","json_to_sheet","workbook","book_new","filename","book_append_sheet","writeFile"],"sourceRoot":"","sources":["/home/tars/Documentos/proyectos/test_vue/src/components/pruebas.vue"],"sourcesContent":["<template>\n  <div id=\"aplicacion\">\n    <button class=\"btn_get\" v-on:click=\"recuperarPost()\">\n      Click para mostrar los post\n    </button>\n    <br><br>\n    <div>\n      <hr>\n        <table id=\"pruebasVue\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>TITLE</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"nota in notas\" v-bind:key=\"nota.id\">\n              <td>{{ nota.id }}</td>\n              <td>{{ nota.title }}</td>\n            </tr>\n          </tbody>\n        </table>\n        <div v-if=\"this.notas != null\">\n          <button class=\"btn_download\" @click=\"downloadExcel()\">\n            Descargar excel\n          </button>\n        </div>\n      <hr>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as XLSX from 'xlsx';\n\nexport default {\n  name: 'pruebasVue',\n  data(){\n    return{\n      notas:[],\n      arrNotas: [],\n    }\n  },\n  methods: {\n    recuperarPost() {\n      axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((respuesta) => {\n        if (respuesta.data) {\n          // console.log('respuesta: ', JSON.stringify(respuesta.data));\n          this.notas = respuesta.data;\n          \n        //   this.$swal({\n        //     title: \"Muy bien\",\n        //   });\n        // } else {\n        //   this.$swal({\n        //     title: \"Oops... Ocurrió un error\",\n        //   });\n        }\n      })\n    },\n    downloadExcel(){\n      this.notas.forEach((nota) => {\n        this.arrNotas.push({\n          Id:nota.id,\n          Titulo:nota.title\n        })\n      });\n\n      let data_export = XLSX.utils.json_to_sheet(this.arrNotas);\n      const workbook = XLSX.utils.book_new();\n      const filename = 'post_recuperados';\n      XLSX.utils.book_append_sheet(workbook, data_export, filename);\n      XLSX.writeFile(workbook, `${filename}.xlsx`);\n    }\n  },\n}\n</script>\n\n<style scoped>\n  #aplicacion{\n    padding: 20px 10px 50px 10px;\n  }\n  #pruebasVue{\n    margin: auto;\n  }\n  th{\n    border: 2px solid #008CBA !important;\n  }\n  th, td{\n    text-align:left;\n    border: 1px solid gray;\n    padding: 10px 10px 10px 10px;\n    margin: auto;\n  }\n  .btn_get{\n    padding: 10px 15px 10px 15px;\n    border: 2px solid;\n    cursor: pointer;\n    background-color: white;\n    color: #008CBA;\n    border-radius: 30px;\n    font-weight: bold;\n  }\n  .btn_get:hover{\n    color: green;\n  }\n  .btn_download{\n    padding: 10px 15px 10px 15px;\n    border: 2px solid;\n    cursor: pointer;\n    background-color: white;\n    color: #008CBA;\n    border-radius: 30px;\n    font-weight: bold;\n    margin-top: 20px;\n  }\n  .btn_download:hover{\n    color: green;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}
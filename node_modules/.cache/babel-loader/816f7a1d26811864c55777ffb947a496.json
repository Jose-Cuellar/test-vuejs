{"ast":null,"code":"import axios from \"axios\";\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert2';\nexport default {\n  name: 'pruebaAxios',\n\n  data() {\n    return {\n      datos: [],\n      dataToExport: [],\n      // paginación\n      currentPage: 1,\n      pageSize: 10,\n      totalDatos: 0,\n      totalPages: 0,\n      paginatedData: [],\n      pageSizes: [5, 10, 15],\n      currentSize: 10,\n      paginationVisible: true,\n      loading: false\n    };\n  },\n\n  computed: {\n    pages() {\n      const pages = [];\n      const limit = this.totalPages > 5 ? 5 : this.totalPages;\n      let start = this.currentPage - 2;\n      if (start <= 0) start = 1;\n      let end = start + limit - 1;\n\n      if (end > this.totalPages) {\n        end = this.totalPages;\n        start = end - limit + 1;\n        if (start <= 0) start = 1;\n      }\n\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n\n      return pages;\n    }\n\n  },\n  methods: {\n    get_data() {\n      this.loading = true;\n      axios.get(\"https://jsonplaceholder.typicode.com/todos/\").then(res => {\n        this.datos = res.data;\n        this.totalDatos = this.datos.length;\n        this.totalPages = Math.ceil(this.totalDatos / this.pageSize);\n        this.paginate();\n        this.loading = false;\n      });\n    },\n\n    paginate() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      this.paginatedData = this.datos.slice(start, end);\n    },\n\n    changePage(page) {\n      this.currentPage = page;\n      this.paginate();\n    },\n\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.paginate();\n      }\n    },\n\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.paginate();\n      }\n    },\n\n    changeSize(size) {\n      this.pageSize = size;\n      this.totalPages = Math.ceil(this.totalDatos / this.pageSize);\n      this.currentPage = 1;\n      this.paginate();\n    },\n\n    downloadExcel() {\n      swal.fire({\n        icon: \"question\",\n        title: \"Descargar reporte\",\n        text: \"¿Deseas descargar el reporte?\",\n        confirmButtonText: \"Sí, Descargar\",\n        confirmButtonColor: \"green\",\n        showCancelButton: true,\n        cancelButtonText: \"No, Cancelar\",\n        cancelButtonColor: \"#d33\",\n        showClass: {\n          popup: 'animate__animated animate__fadeInDown'\n        }\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.datos.forEach(dato => {\n            this.dataToExport.push({\n              Id_Usuario: dato.userId,\n              Id: dato.id,\n              Titulo: dato.title,\n              Completado: dato.completed\n            });\n          });\n          let data = XLSX.utils.json_to_sheet(this.dataToExport);\n          const workbook = XLSX.utils.book_new();\n          const filename = 'axios_get';\n          XLSX.utils.book_append_sheet(workbook, data, filename);\n          XLSX.writeFile(workbook, `${filename}.xlsx`);\n        }\n      });\n    },\n\n    back() {\n      window.history.back();\n    }\n\n  },\n\n  mounted() {\n    this.get_data();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","XLSX","swal","name","data","datos","dataToExport","currentPage","pageSize","totalDatos","totalPages","paginatedData","pageSizes","currentSize","paginationVisible","loading","computed","pages","limit","start","end","i","push","methods","get_data","get","then","res","length","Math","ceil","paginate","slice","changePage","page","prevPage","nextPage","changeSize","size","downloadExcel","fire","icon","title","text","confirmButtonText","confirmButtonColor","showCancelButton","cancelButtonText","cancelButtonColor","showClass","popup","result","isConfirmed","forEach","dato","Id_Usuario","userId","Id","id","Titulo","Completado","completed","utils","json_to_sheet","workbook","book_new","filename","book_append_sheet","writeFile","back","window","history","mounted"],"sourceRoot":"","sources":["/home/tars/Documentos/proyectos/test_vue/src/views/datosAxios/pruebaAxios.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <hr>\n    <h1 id=\"title\">Datos consumidos por axios</h1>\n      <table class=\"table table-striped\">\n        <thead class=\"thead-light\">\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">ID USER</th>\n            <th scope=\"col\">TITLE</th>\n            <th scope=\"col\">COMPLETED</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"dato in datos.slice((currentPage - 1) * 10, currentPage * 10)\" :key=\"dato.id\">\n            <td>{{ dato.id }}</td>\n            <td>{{ dato.userId }}</td>\n            <td>{{ dato.title }}</td>\n            <td>{{ dato.completed }}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <!-- Paginación -->\n      <div class=\"d-flex justify-content-center\">\n        <nav aria-label=\"Page navigation example\">\n          <ul class=\"pagination\">\n            <li class=\"page-item\" :class=\"{disabled: currentPage === 1}\">\n              <a class=\"page-link\" href=\"#\" @click.prevent=\"prevPage()\">\n                Anterior\n              </a>\n            </li>\n            <li class=\"page-item\" v-for=\"page in pages\" :key=\"page\" :class=\"{active: currentPage === page}\">\n              <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(page)\">\n                {{ page }}\n              </a>\n            </li>\n            <li class=\"page-item\" :class=\"{disabled: currentPage === totalPages}\">\n              <a class=\"page-link\" href=\"#\" @click.prevent=\"nextPage()\">\n                Siguiente\n              </a>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      <div class=\"botones\">\n        <button class=\"btn_back\" @click=\"back()\">\n          Regresar\n        </button>\n        <button class=\"btn_excel\" @click=\"downloadExcel()\">\n          Descargar excel\n        </button>\n      </div>\n      <hr>\n  </div>\n</template>\n  \n<script>\nimport axios from \"axios\";\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert2';\n\nexport default {\n  name: 'pruebaAxios',\n  data(){\n    return{\n      datos: [],\n      dataToExport: [],\n      // paginación\n      currentPage: 1,\n      pageSize: 10,\n      totalDatos: 0,\n      totalPages: 0,\n      paginatedData: [],\n      pageSizes: [5, 10, 15],\n      currentSize: 10,\n      paginationVisible: true,\n      loading: false,\n    }\n  },\n  computed: {\n    pages() {\n      const pages = [];\n      const limit = this.totalPages > 5 ? 5 : this.totalPages;\n      let start = this.currentPage - 2;\n      if (start <= 0) start = 1;\n      let end = start + limit - 1;\n      if (end > this.totalPages) {\n        end = this.totalPages;\n        start = end - limit + 1;\n        if (start <= 0) start = 1;\n      }\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      return pages;\n    },\n  },\n  methods:{\n    get_data() {\n      this.loading = true;\n      axios.get(\"https://jsonplaceholder.typicode.com/todos/\").then((res) => {\n        this.datos = res.data;\n        this.totalDatos = this.datos.length;\n        this.totalPages = Math.ceil(this.totalDatos / this.pageSize);\n        this.paginate();\n        this.loading = false;\n      });\n    },\n    paginate() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      this.paginatedData = this.datos.slice(start, end);\n    },\n    changePage(page) {\n      this.currentPage = page;\n      this.paginate();\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.paginate();\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.paginate();\n      }\n    },\n    changeSize(size) {\n      this.pageSize = size;\n      this.totalPages = Math.ceil(this.totalDatos / this.pageSize);\n      this.currentPage = 1;\n      this.paginate();\n    },\n\n    downloadExcel() {\n      swal.fire({\n        icon: \"question\",\n        title: \"Descargar reporte\",\n        text: \"¿Deseas descargar el reporte?\",\n        confirmButtonText: \"Sí, Descargar\",\n        confirmButtonColor: \"green\",\n        showCancelButton: true,\n        cancelButtonText: \"No, Cancelar\",\n        cancelButtonColor: \"#d33\",\n        showClass: {\n          popup: 'animate__animated animate__fadeInDown'\n        },\n      }).then( (result) => {\n        if(result.isConfirmed){\n          this.datos.forEach((dato) => {\n            this.dataToExport.push({\n              Id_Usuario:dato.userId,\n              Id:dato.id,\n              Titulo:dato.title,\n              Completado:dato.completed\n            });\n          });\n          let data = XLSX.utils.json_to_sheet(this.dataToExport);\n          const workbook = XLSX.utils.book_new();\n          const filename = 'axios_get';\n          XLSX.utils.book_append_sheet(workbook, data, filename);\n          XLSX.writeFile(workbook, `${filename}.xlsx`);\n        }\n      });\n    },\n    back(){\n      window.history.back();\n    },\n  },\n  mounted(){\n    this.get_data();\n  },\n};\n</script>\n  \n<style scoped>\n  .content{\n    max-width: 80%;\n    padding: 20px 10px 50px 10px;\n    margin: auto;\n  }\n  /* th{\n    border: 2px solid #008CBA !important;\n  }\n  th, td{\n    text-align:left;\n    border: 1px solid gray;\n    padding: 10px 10px 10px 10px;\n    margin: auto;\n  } */\n  #title{\n    font-size:30px;\n    color:darkblue;\n  }\n  .d-flex{\n    padding: 50px;\n  }\n  .botones{\n    width: 100%;\n    margin: auto;\n  }\n  .btn_excel{\n    padding: 5px 15px 5px 15px;\n    border: 2px solid;\n    cursor: pointer;\n    background-color: white;\n    color: #008CBA;\n    border-radius: 30px;\n    font-weight: bold;\n    margin: 20px 20px 5px 0px;\n  }\n  .btn_excel:hover{\n    color: green;\n  }\n  .btn_back{\n    padding: 5px 15px 5px 15px;\n    border: 2px solid;\n    cursor: pointer;\n    background-color: white;\n    color: #008CBA;\n    border-radius: 30px;\n    font-weight: bold;\n    margin: 20px 20px 5px 0px;\n  }\n  .btn_back:hover{\n    color: red;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}
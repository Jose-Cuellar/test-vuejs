{"ast":null,"code":"import axios from \"axios\";\nimport * as XLSX from 'xlsx'; // import * as XLSX from 'xlsx/xlsx';\n\nexport default {\n  name: 'pruebaAxios',\n\n  data() {\n    return {\n      datos: [],\n      newArray: [],\n      dataToExport: []\n    };\n  },\n\n  methods: {\n    downloadExcel() {\n      this.datos.forEach(dato => {\n        this.dataToExport.push({\n          Id_Usuario: dato.userId,\n          Id: dato.id,\n          Titulo: dato.title,\n          Completado: dato.completed\n        });\n      });\n      let data = XLSX.utils.json_to_sheet(this.dataToExport);\n      const workbook = XLSX.utils.book_new();\n      const filename = 'axios_get';\n      XLSX.utils.book_append_sheet(workbook, data, filename);\n      XLSX.writeFile(workbook, `${filename}.xlsx`);\n    }\n\n  },\n\n  created() {\n    var app = this;\n    axios.get(\"https://jsonplaceholder.typicode.com/todos/\").then(res => {\n      app.datos = res.data;\n      console.log('app.datos: ', app.datos);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AA8BE,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB,C,CACA;;AAEA,eAAe;EACbC,IAAI,EAAE,aADO;;EAEbC,IAAI,GAAE;IACF,OAAM;MACFC,KAAK,EAAE,EADL;MAEFC,QAAQ,EAAE,EAFR;MAGFC,YAAY,EAAE;IAHZ,CAAN;EAKH,CARY;;EASbC,OAAO,EAAC;IACJC,aAAa,GAAG;MACZ,KAAKJ,KAAL,CAAWK,OAAX,CAAoBC,IAAD,IAAU;QACzB,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuB;UACnBC,UAAU,EAACF,IAAI,CAACG,MADG;UAEnBC,EAAE,EAACJ,IAAI,CAACK,EAFW;UAGnBC,MAAM,EAACN,IAAI,CAACO,KAHO;UAInBC,UAAU,EAACR,IAAI,CAACS;QAJG,CAAvB;MAMH,CAPD;MASA,IAAIhB,IAAG,GAAIF,IAAI,CAACmB,KAAL,CAAWC,aAAX,CAAyB,KAAKf,YAA9B,CAAX;MACA,MAAMgB,QAAO,GAAIrB,IAAI,CAACmB,KAAL,CAAWG,QAAX,EAAjB;MACA,MAAMC,QAAO,GAAI,WAAjB;MACAvB,IAAI,CAACmB,KAAL,CAAWK,iBAAX,CAA6BH,QAA7B,EAAuCnB,IAAvC,EAA6CqB,QAA7C;MACAvB,IAAI,CAACyB,SAAL,CAAeJ,QAAf,EAA0B,GAAEE,QAAS,OAArC;IACJ;;EAhBI,CATK;;EA2BbG,OAAO,GAAG;IACN,IAAIC,GAAE,GAAI,IAAV;IACA5B,KAAK,CAAC6B,GAAN,CAAU,6CAAV,EAAyDC,IAAzD,CAA+DC,GAAD,IAAS;MACnEH,GAAG,CAACxB,KAAJ,GAAY2B,GAAG,CAAC5B,IAAhB;MACA6B,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,GAAG,CAACxB,KAA/B;IACH,CAHD;EAIJ;;AAjCa,CAAf","names":["axios","XLSX","name","data","datos","newArray","dataToExport","methods","downloadExcel","forEach","dato","push","Id_Usuario","userId","Id","id","Titulo","title","Completado","completed","utils","json_to_sheet","workbook","book_new","filename","book_append_sheet","writeFile","created","app","get","then","res","console","log"],"sourceRoot":"","sources":["/home/tars/Documentos/proyectos/practicando_vue/src/components/pruebaAxios.vue"],"sourcesContent":["<template>\n    <div class=\"content\">\n        <h1 id=\"title\">Datos consumidos por axios</h1>\n        <hr>\n        <table id=\"data\">\n            <thead>\n                <tr>\n                    <th>ID USER</th>\n                    <th>ID</th>\n                    <th>TITLE</th>\n                    <th>COMPLETED</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"dato in datos\" v-bind:key=\"dato.id\">\n                    <td>{{ dato.userId }}</td>\n                    <td>{{ dato.id }}</td>\n                    <td>{{ dato.title }}</td>\n                    <td>{{ dato.completed }}</td>\n                </tr>\n            </tbody>\n        </table>\n        <hr>\n        <button class=\"btn_excel\" @click=\"downloadExcel()\">\n            Descargar excel\n        </button>\n    </div>\n  </template>\n  \n  <script>\n  import axios from \"axios\";\n  import * as XLSX from 'xlsx';\n  // import * as XLSX from 'xlsx/xlsx';\n\n  export default {\n    name: 'pruebaAxios',\n    data(){\n        return{\n            datos: [],\n            newArray: [],\n            dataToExport: [],\n        }\n    },\n    methods:{\n        downloadExcel() {\n            this.datos.forEach((dato) => {\n                this.dataToExport.push({\n                    Id_Usuario:dato.userId,\n                    Id:dato.id,\n                    Titulo:dato.title,\n                    Completado:dato.completed\n                });\n            });\n\n            let data = XLSX.utils.json_to_sheet(this.dataToExport)\n            const workbook = XLSX.utils.book_new()\n            const filename = 'axios_get'\n            XLSX.utils.book_append_sheet(workbook, data, filename)\n            XLSX.writeFile(workbook, `${filename}.xlsx`)\n        }\n    },\n    created() {\n        var app = this;\n        axios.get(\"https://jsonplaceholder.typicode.com/todos/\").then((res) => {\n            app.datos = res.data;\n            console.log('app.datos: ', app.datos);\n        });\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .content{\n    padding: 20px 10px 50px 10px;\n  }\n  th, td{\n    text-align:left; \n    padding-left:100px;\n  }\n  #title{\n    font-size:30px;\n    color:darkblue;\n  }\n  .btn_excel{\n    padding: 10px 15px 10px 15px;\n    border: none;\n    cursor: pointer;\n    background-color: #008CBA;\n    color: white;\n    border-radius: 30px;\n    font-weight: bold;\n  }\n  .btn_excel:hover{\n    color: gray;\n  }\n  </style>"]},"metadata":{},"sourceType":"module"}